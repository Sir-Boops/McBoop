version: 2.1
jobs:
  build:
    docker:
      - image: golang:1.13.5-alpine
    steps:
      - checkout
      - run: apk add git py2-pip
      - run: pip install awscli
      - run: go get github.com/logrusorgru/aurora
      - run: go get github.com/tidwall/gjson
      - run: go get github.com/satori/go.uuid
      - run: go get github.com/pierrec/lz4
      - run: cd $GOPATH/src/github.com/pierrec/lz4 && git fetch && git checkout v3.0.1
      - run: go get github.com/mholt/archiver
      - run: CGO_ENABLED=0 GOARCH=amd64 GOOS=linux go build -a -ldflags '-extldflags "-static"' -o McBoop .
      - run: CGO_ENABLED=0 GOARCH=amd64 GOOS=windows go build -o McBoop.exe .
      - run: sha256sum McBoop | head -c 64 > McBoop.sha256
      - run: sha256sum McBoop.exe | head -c 64 > McBoop.exe.sha256
      - run: aws s3 cp McBoop s3://boops-deploy/McBoop/McBoop --acl public-read
      - run: aws s3 cp McBoop.sha256 s3://boops-deploy/McBoop/McBoop.sha256 --acl public-read
      - run: aws s3 cp McBoop.exe s3://boops-deploy/McBoop/McBoop.exe --acl public-read
      - run: aws s3 cp McBoop.exe.sha256 s3://boops-deploy/McBoop/McBoop.exe.sha256 --acl public-read
      - run: sed -i "s/buildbot/$(git rev-parse HEAD)/g" .circleci/inv-batch.json
      - run: aws cloudfront create-invalidation --distribution-id EYO1QOMN5FQJH --invalidation-batch file://.circleci/inv-batch.json
